{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\src\\\\layout\\\\js\\\\Login-Register.js\";\nimport React, { Component } from 'react';\nimport '../css/Login-Register.css';\nimport axios from \"axios\";\n\nvar LoginRegister =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginRegister, _Component);\n\n  function LoginRegister(props) {\n    var _this;\n\n    _classCallCheck(this, LoginRegister);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginRegister).call(this, props));\n    _this.state = {\n      isLoginOpen: true,\n      isRegisterOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginRegister, [{\n    key: \"showLoginBox\",\n    value: function showLoginBox() {\n      this.setState({\n        isLoginOpen: true,\n        isRegisterOpen: false\n      });\n    }\n  }, {\n    key: \"showRegisterBox\",\n    value: function showRegisterBox() {\n      this.setState({\n        isRegisterOpen: true,\n        isLoginOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"test\",\n        className: \"re-root-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-controller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\"),\n        onClick: this.showLoginBox.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"controller \" + (this.state.isRegisterOpen ? \"selected-controller\" : \"\"),\n        onClick: this.showRegisterBox.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Register\")), React.createElement(\"div\", {\n        className: \"box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.isLoginOpen && React.createElement(LoginBox, {\n        hide: this.props.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), this.state.isRegisterOpen && React.createElement(RegisterBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LoginRegister;\n}(Component); //Login Box\n\n\nvar LoginBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginBox, _React$Component);\n\n  function LoginBox(props) {\n    var _this2;\n\n    _classCallCheck(this, LoginBox);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LoginBox).call(this, props));\n    _this2.state = {\n      errors: [],\n      email: '',\n      password: '',\n      redirectToReferrer: false\n    };\n    return _this2;\n  } //Add New Error Object to the array {elm: msg}\n\n\n  _createClass(LoginBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    } //Remove a specific element from the array\n\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = []; //Add all elements from the prev array to the new one that has a different element\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elm !== err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    } //Update Email, password on change event\n\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      this.setState({\n        email: e.target.value\n      });\n      this.clearValidationErr(\"email\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(e) {\n      this.setState({\n        password: e.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(e) {\n      var _this3 = this;\n\n      var err = false;\n\n      if (this.state.email === \"\") {\n        this.showValidationErr(\"email\", \"Email Cannot be empty!\");\n        err = true;\n      }\n\n      var emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n      if (!emailRegex.test(this.state.email)) {\n        this.showValidationErr(\"email\", \"invalid email address!\");\n        err = true;\n      }\n\n      if (this.state.password.length < 6) {\n        this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\n        err = true;\n      }\n\n      if (err === false) {\n        var user = {\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        };\n        axios.post(\"https://smartnews.nal.vn/api/login\", user).then(function (res) {\n          axios.get('https://smartnews.nal.vn/api/auth', {\n            headers: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n              \"Authorization\": \"Bearer\" + res.data.token\n            }\n          }).then(function (res) {\n            var responseJson = res.data;\n            var hehe = res.data.token;\n            console.log(hehe);\n            sessionStorage.setItem('userData', JSON.stringify(responseJson)); // localStorage.setItem('token', hehe);\n\n            _this3.props.hide();\n          }).catch(function (err) {\n            console.log(err);\n          });\n\n          _this3.setState({\n            redirectToReferrer: true\n          });\n        }).catch(function (error) {\n          var err = error.response.data;\n          console.log(error.response.data.msg);\n\n          if (err.msg) {\n            _this3.showValidationErr(\"login\", err.msg);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if (this.state.redirectToReferrer) {\n      //   return (<Redirect to={'/user'}/>)\n      // }\n      // if(sessionStorage.getItem('userData')){\n      //   return (<Redirect to={'/'}/>)\n      // }\n      //NULL by default (help us check when rendering)\n      var passwordErr = null,\n          emailErr = null,\n          loginErr = null; //Loop and find which ones has the error\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          //Assign the validation error message\n          if (err.elm === \"password\") {\n            passwordErr = err.msg;\n          }\n\n          if (err.elm === \"email\") {\n            emailErr = err.msg;\n          }\n\n          if (err.elm === \"login\") {\n            loginErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, loginErr ? loginErr : \"\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"login-input\",\n        placeholder: \"Email\",\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitLogin.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginBox;\n}(React.Component); //Register Box \n\n\nvar RegisterBox =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(RegisterBox, _React$Component2);\n\n  function RegisterBox(props) {\n    var _this4;\n\n    _classCallCheck(this, RegisterBox);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(RegisterBox).call(this, props));\n    _this4.state = {\n      errors: [],\n      username: '',\n      email: '',\n      password: '',\n      confirmed_password: ''\n    };\n    return _this4;\n  } //Add New Error Object to the array {elm: msg}\n\n\n  _createClass(RegisterBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    } //Remove a specific element from the array\n\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = []; //Add all elements from the prev array to the new one that has a different element\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = prevState.errors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var err = _step3.value;\n\n            if (elm !== err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    } //Update Username, password, and email on change event\n\n  }, {\n    key: \"onUsernameChange\",\n    value: function onUsernameChange(e) {\n      this.setState({\n        username: e.target.value\n      }); //We want to clear the error when ever the user type something new\n\n      this.clearValidationErr(\"username\");\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      this.setState({\n        email: e.target.value\n      });\n      this.clearValidationErr(\"email\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(e) {\n      this.setState({\n        password: e.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"onConfirmedPasswordChange\",\n    value: function onConfirmedPasswordChange(e) {\n      this.setState({\n        confirmed_password: e.target.value\n      });\n      this.clearValidationErr(\"confirmed_password\");\n    }\n  }, {\n    key: \"submitRegister\",\n    value: function submitRegister(e) {\n      var _this5 = this;\n\n      var err = false; //Check for all input fields and show errors if empty (you can implement other cases!)\n\n      if (this.state.username === \"\") {\n        this.showValidationErr(\"username\", \"Username Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.email === \"\") {\n        this.showValidationErr(\"email\", \"Email Cannot be empty!\");\n        err = true;\n      }\n\n      var emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n      if (!emailRegex.test(this.state.email)) {\n        this.showValidationErr(\"email\", \"invalid email address!\");\n        err = true;\n      }\n\n      if (this.state.password === \"\") {\n        this.showValidationErr(\"password\", \"Password Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.password.length < 6) {\n        this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\n        err = true;\n      }\n\n      if (this.state.confirmed_password === \"\") {\n        this.showValidationErr(\"confirmed_password\", \"Confirmed Password Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.password !== this.state.confirmed_password) {\n        console.log(this.state.password, this.state.confirmed_password);\n        console.log('ddd', this.state.confirmed_password);\n        this.showValidationErr(\"confirmed_password\", \"Confirmed Password must be same as password\");\n        err = true;\n      }\n\n      if (err === false) {\n        var user = {\n          \"name\": this.state.username,\n          \"email\": this.state.email,\n          \"password\": this.state.password,\n          \"passwordConfirm\": this.state.confirmed_password\n        };\n        console.log(user);\n        axios.post(\"https://smartnews.nal.vn/api/register\", user).then(function (res) {\n          console.log(res);\n          console.log(res.data);\n          alert('You have registered successfully');\n        }).catch(function (error) {\n          var err = error.response.data.errors;\n          console.log(error.response.data.errors);\n\n          if (err.email) {\n            _this5.showValidationErr(\"email\", err.email[0]);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //NULL by default (help us check when rendering)\n      var usernameErr = null,\n          passwordErr = null,\n          emailErr = null,\n          ConfirmedPassword = null; //Loop and find which ones has the error\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.state.errors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var err = _step4.value;\n\n          //Assign the validation error message\n          if (err.elm === \"username\") {\n            usernameErr = err.msg;\n          }\n\n          if (err.elm === \"password\") {\n            passwordErr = err.msg;\n          }\n\n          if (err.elm === \"email\") {\n            emailErr = err.msg;\n          }\n\n          if (err.elm === \"confirmed_password\") {\n            ConfirmedPassword = err.msg;\n          } //No (else if or else) statements cause we need to check for all possible elements\n\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"login-input\",\n        placeholder: \"Username\",\n        onChange: this.onUsernameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"login-input\",\n        placeholder: \"Email\",\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Confirm Password\",\n        onChange: this.onConfirmedPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, ConfirmedPassword ? ConfirmedPassword : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return RegisterBox;\n}(React.Component);\n\nexport default LoginRegister;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\my-app-reactjs\\src\\layout\\js\\Login-Register.js"],"names":["React","Component","axios","LoginRegister","props","state","isLoginOpen","isRegisterOpen","setState","showLoginBox","bind","showRegisterBox","hide","LoginBox","errors","email","password","redirectToReferrer","elm","msg","prevState","newArr","err","push","e","target","value","clearValidationErr","showValidationErr","emailRegex","RegExp","test","length","user","post","then","res","get","headers","data","token","responseJson","hehe","console","log","sessionStorage","setItem","JSON","stringify","catch","error","response","passwordErr","emailErr","loginErr","onEmailChange","onPasswordChange","submitLogin","RegisterBox","username","confirmed_password","alert","usernameErr","ConfirmedPassword","onUsernameChange","onConfirmedPasswordChange","submitRegister"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../css/Login-Register.css';\r\nimport axios from \"axios\";\r\n\r\nclass LoginRegister extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoginOpen: true,\r\n            isRegisterOpen: false\r\n        };\r\n    }\r\n\r\n    showLoginBox() {\r\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n    }\r\n\r\n    showRegisterBox() {\r\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"test\" className=\"re-root-container\">\r\n                <div className=\"box-controller\">\r\n                    <div\r\n                        className={\"controller \" + (this.state.isLoginOpen\r\n                            ? \"selected-controller\"\r\n                            : \"\")}\r\n                        onClick={this\r\n                            .showLoginBox\r\n                            .bind(this)}>\r\n                        Login\r\n                    </div>\r\n\r\n                    <div\r\n                        className={\"controller \" + (this.state.isRegisterOpen\r\n                            ? \"selected-controller\"\r\n                            : \"\")}\r\n                        onClick={this\r\n                            .showRegisterBox\r\n                            .bind(this)}>\r\n                        Register\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"box-container\">\r\n                    {this.state.isLoginOpen && <LoginBox hide={this.props.hide}/>}\r\n                    {this.state.isRegisterOpen && <RegisterBox/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Login Box\r\nclass LoginBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: [],\r\n            email: '',\r\n            password: '',\r\n            redirectToReferrer: false,\r\n        };\r\n    }\r\n\r\n    //Add New Error Object to the array {elm: msg}\r\n    showValidationErr(elm, msg) {\r\n        this.setState((prevState) => ({\r\n            errors: [\r\n                ...prevState.errors, {\r\n                    elm,\r\n                    msg\r\n                }\r\n            ]\r\n        }));\r\n    }\r\n\r\n    //Remove a specific element from the array\r\n    clearValidationErr(elm) {\r\n        this.setState((prevState) => {\r\n            let newArr = [];\r\n            //Add all elements from the prev array to the new one that has a different element\r\n            for (let err of prevState.errors) {\r\n                if (elm !== err.elm) {\r\n                    newArr.push(err);\r\n                }\r\n            }\r\n            return {errors: newArr};\r\n        });\r\n    }\r\n\r\n    //Update Email, password on change event\r\n    onEmailChange(e) {\r\n        this.setState({email: e.target.value});\r\n        this.clearValidationErr(\"email\");\r\n    }\r\n\r\n    onPasswordChange(e) {\r\n        this.setState({password: e.target.value});\r\n        this.clearValidationErr(\"password\");\r\n    }\r\n\r\n    submitLogin(e) {\r\n        let err = false;\r\n        if (this.state.email === \"\") {\r\n            this.showValidationErr(\"email\", \"Email Cannot be empty!\");\r\n            err = true;\r\n        }\r\n        const emailRegex = RegExp(\r\n            /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n        );\r\n        if (!emailRegex.test(this.state.email)) {\r\n            this.showValidationErr(\"email\", \"invalid email address!\");\r\n            err = true;\r\n        }\r\n\r\n        if (this.state.password.length < 6) {\r\n            this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\r\n            err = true;\r\n        }\r\n\r\n        if (err === false) {\r\n            const user = {\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password,\r\n            }\r\n\r\n            axios.post(`https://smartnews.nal.vn/api/login`, user)\r\n                .then(res => {\r\n                    axios.get('https://smartnews.nal.vn/api/auth',\r\n                        {\r\n                            headers: {\r\n                                \"Access-Control-Allow-Origin\": \"*\",\r\n                                \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n                                \"Authorization\": \"Bearer\" + res.data.token,\r\n                            }\r\n                        }).then(\r\n                        res => {\r\n                            let responseJson = res.data;\r\n                            let hehe = res.data.token;\r\n                            console.log(hehe)\r\n                            sessionStorage.setItem('userData', JSON.stringify(responseJson));\r\n                            // localStorage.setItem('token', hehe);\r\n                            this.props.hide();\r\n                        }\r\n                    ).catch(err => {\r\n                        console.log(err)\r\n                    })\r\n\r\n                    this.setState({redirectToReferrer: true});\r\n\r\n\r\n                }).catch(error => {\r\n                let err = error.response.data\r\n                console.log(error.response.data.msg)\r\n                if (err.msg) {\r\n                    this.showValidationErr(\"login\", err.msg);\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.redirectToReferrer) {\r\n        //   return (<Redirect to={'/user'}/>)\r\n        // }\r\n\r\n        // if(sessionStorage.getItem('userData')){\r\n        //   return (<Redirect to={'/'}/>)\r\n        // }\r\n\r\n        //NULL by default (help us check when rendering)\r\n        let\r\n            passwordErr = null,\r\n            emailErr = null,\r\n            loginErr = null;\r\n        //Loop and find which ones has the error\r\n        for (let err of this.state.errors) {\r\n            //Assign the validation error message\r\n\r\n            if (err.elm === \"password\") {\r\n                passwordErr = err.msg;\r\n            }\r\n            if (err.elm === \"email\") {\r\n                emailErr = err.msg;\r\n            }\r\n            if (err.elm === \"login\") {\r\n                loginErr = err.msg;\r\n            }\r\n\r\n        }\r\n        return (\r\n            <div className=\"inner-container\">\r\n                <div className=\"header\">\r\n                    Login\r\n                </div>\r\n\r\n                <small className=\"danger-error\">{loginErr\r\n                    ? loginErr\r\n                    : \"\"}\r\n                </small>\r\n\r\n                <div className=\"box\">\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            className=\"login-input\"\r\n                            placeholder=\"Email\"\r\n                            onChange={this\r\n                                .onEmailChange\r\n                                .bind(this)}/>\r\n                        <small className=\"danger-error\">{emailErr\r\n                            ? emailErr\r\n                            : \"\"}\r\n                        </small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"login-input\"\r\n                            placeholder=\"Password\"\r\n                            onChange={this\r\n                                .onPasswordChange\r\n                                .bind(this)}/>\r\n                        <small className=\"danger-error\">{passwordErr\r\n                            ? passwordErr\r\n                            : \"\"}\r\n                        </small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"login-btn\"\r\n                        onClick={this\r\n                            .submitLogin\r\n                            .bind(this)}>Login\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n//Register Box \r\nclass RegisterBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: [],\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmed_password: ''\r\n        };\r\n    }\r\n\r\n    //Add New Error Object to the array {elm: msg}\r\n    showValidationErr(elm, msg) {\r\n        this.setState((prevState) => ({\r\n            errors: [\r\n                ...prevState.errors, {\r\n                    elm,\r\n                    msg\r\n                }\r\n            ]\r\n        }));\r\n    }\r\n\r\n    //Remove a specific element from the array\r\n    clearValidationErr(elm) {\r\n        this.setState((prevState) => {\r\n            let newArr = [];\r\n            //Add all elements from the prev array to the new one that has a different element\r\n            for (let err of prevState.errors) {\r\n                if (elm !== err.elm) {\r\n                    newArr.push(err);\r\n                }\r\n            }\r\n            return {errors: newArr};\r\n        });\r\n    }\r\n\r\n    //Update Username, password, and email on change event\r\n    onUsernameChange(e) {\r\n        this.setState({username: e.target.value});\r\n        //We want to clear the error when ever the user type something new\r\n        this.clearValidationErr(\"username\");\r\n    }\r\n\r\n    onEmailChange(e) {\r\n        this.setState({email: e.target.value});\r\n        this.clearValidationErr(\"email\");\r\n    }\r\n\r\n    onPasswordChange(e) {\r\n        this.setState({password: e.target.value});\r\n        this.clearValidationErr(\"password\");\r\n    }\r\n\r\n    onConfirmedPasswordChange(e) {\r\n        this.setState({confirmed_password: e.target.value});\r\n        this.clearValidationErr(\"confirmed_password\");\r\n    }\r\n\r\n    submitRegister(e) {\r\n        let err = false;\r\n        //Check for all input fields and show errors if empty (you can implement other cases!)\r\n        if (this.state.username === \"\") {\r\n            this.showValidationErr(\"username\", \"Username Cannot be empty!\");\r\n            err = true;\r\n        }\r\n        if (this.state.email === \"\") {\r\n            this.showValidationErr(\"email\", \"Email Cannot be empty!\");\r\n            err = true;\r\n        }\r\n\r\n        const emailRegex = RegExp(\r\n            /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n        );\r\n        if (!emailRegex.test(this.state.email)) {\r\n            this.showValidationErr(\"email\", \"invalid email address!\");\r\n            err = true;\r\n        }\r\n\r\n        if (this.state.password === \"\") {\r\n            this.showValidationErr(\"password\", \"Password Cannot be empty!\");\r\n            err = true;\r\n        }\r\n\r\n        if (this.state.password.length < 6) {\r\n            this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\r\n            err = true;\r\n        }\r\n\r\n        if (this.state.confirmed_password === \"\") {\r\n            this.showValidationErr(\"confirmed_password\", \"Confirmed Password Cannot be empty!\");\r\n            err = true;\r\n        }\r\n\r\n        if (this.state.password !== this.state.confirmed_password) {\r\n            console.log(this.state.password, this.state.confirmed_password)\r\n            console.log('ddd', this.state.confirmed_password)\r\n            this.showValidationErr(\"confirmed_password\", \"Confirmed Password must be same as password\");\r\n            err = true;\r\n        }\r\n\r\n        if (err === false) {\r\n            const user = {\r\n                \"name\": this.state.username,\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password,\r\n                \"passwordConfirm\": this.state.confirmed_password,\r\n            }\r\n            console.log(user);\r\n            axios.post(`https://smartnews.nal.vn/api/register`, user)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                    alert('You have registered successfully')\r\n                }).catch(error => {\r\n                let err = error.response.data.errors\r\n                console.log(error.response.data.errors)\r\n                if (err.email) {\r\n                    this.showValidationErr(\"email\", err.email[0]);\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //NULL by default (help us check when rendering)\r\n        let usernameErr = null,\r\n            passwordErr = null,\r\n            emailErr = null,\r\n            ConfirmedPassword = null;\r\n        //Loop and find which ones has the error\r\n        for (let err of this.state.errors) {\r\n            //Assign the validation error message\r\n            if (err.elm === \"username\") {\r\n                usernameErr = err.msg;\r\n            }\r\n            if (err.elm === \"password\") {\r\n                passwordErr = err.msg;\r\n            }\r\n            if (err.elm === \"email\") {\r\n                emailErr = err.msg;\r\n            }\r\n            if (err.elm === \"confirmed_password\") {\r\n                ConfirmedPassword = err.msg;\r\n            }\r\n            //No (else if or else) statements cause we need to check for all possible elements\r\n        }\r\n\r\n        return (\r\n            <div className=\"inner-container\">\r\n                <div className=\"header\">\r\n                    Register\r\n                </div>\r\n                <div className=\"box\">\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            className=\"login-input\"\r\n                            placeholder=\"Username\"\r\n                            onChange={this\r\n                                .onUsernameChange\r\n                                .bind(this)}/>\r\n                        <small className=\"danger-error\">{usernameErr\r\n                            ? usernameErr\r\n                            : \"\"}\r\n                        </small>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"text\" name=\"email\" className=\"login-input\" placeholder=\"Email\"\r\n                               onChange={this\r\n                                   .onEmailChange\r\n                                   .bind(this)}/>\r\n\r\n                        <small className=\"danger-error\">{emailErr\r\n                            ? emailErr\r\n                            : \"\"}\r\n                        </small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"login-input\"\r\n                            placeholder=\"Password\"\r\n                            onChange={this\r\n                                .onPasswordChange\r\n                                .bind(this)}/>\r\n                        <small className=\"danger-error\">{passwordErr\r\n                            ? passwordErr\r\n                            : \"\"}\r\n                        </small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Confirm Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"login-input\"\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={this\r\n                                .onConfirmedPasswordChange\r\n                                .bind(this)}/>\r\n                        <small className=\"danger-error\">{ConfirmedPassword\r\n                            ? ConfirmedPassword\r\n                            : \"\"}\r\n                        </small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"login-btn\"\r\n                        onClick={this\r\n                            .submitRegister\r\n                            .bind(this)}>Register\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginRegister;"]},"metadata":{},"sourceType":"module"}