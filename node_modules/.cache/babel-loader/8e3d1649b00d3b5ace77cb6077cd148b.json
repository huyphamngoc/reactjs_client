{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\src\\\\profile-user\\\\js\\\\Create-News.js\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from 'axios';\nimport { Form, Input, Select, Button, notification } from \"antd\";\nimport FroalaEditor from 'react-froala-wysiwyg';\nimport ListNewsUser from \"./ListNewsUser\";\nvar USER = JSON.parse(sessionStorage.getItem('userData'));\nvar Option = Select.Option;\n\nvar openNotificationWithIcon = function openNotificationWithIcon(type, notifi) {\n  if (type === 'warning') {\n    notification[type]({\n      message: 'Warning',\n      description: 'Please wait for the news to be moderated.'\n    });\n  }\n\n  if (type === 'success') {\n    notification[type]({\n      message: 'Success',\n      description: 'Your news has been posted.'\n    });\n    setTimeout(function () {\n      openNotificationWithIcon(\"warning\");\n    }, 3000);\n  }\n\n  if (type === 'error') {\n    notification[type]({\n      message: 'Error',\n      description: [notifi]\n    });\n  }\n};\n\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar formTailLayout = {\n  labelCol: {\n    span: 16\n  },\n  wrapperCol: {\n    span: 4,\n    offset: 12\n  }\n};\n\nvar DynamicRule =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DynamicRule, _React$Component);\n\n  function DynamicRule(props) {\n    var _this2;\n\n    _classCallCheck(this, DynamicRule);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DynamicRule).call(this, props));\n\n    _this2.enterLoading = function () {\n      _this2.setState({\n        loading: true\n      });\n    };\n\n    _this2.enterIconLoading = function () {\n      _this2.setState({\n        iconLoading: true\n      });\n    };\n\n    _this2.check = function () {\n      _this2.props.form.validateFields(function (err) {\n        if (!err) {\n          _this2.handleFormSubmit();\n\n          _this2.enterLoading();\n        }\n      });\n    };\n\n    _this2.handleModelChange = function (model) {\n      _this2.setState({\n        model: model\n      });\n    };\n\n    _this2.handleSelectChange = function (value) {\n      _this2.setState({\n        category: value\n      });\n    };\n\n    _this2.state = {\n      categoryOptions: [],\n      model: '',\n      title: '',\n      category: '',\n      description: '',\n      source: '',\n      author: '',\n      img: '',\n      user_id: '',\n      loading: false,\n      iconLoading: false,\n      checktitle: false\n    };\n    _this2.handleModelChange = _this2.handleModelChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleFormSubmit = _this2.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleClearForm = _this2.handleClearForm.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleUploadFile = _this2.handleUploadFile.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(DynamicRule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCategory();\n    }\n  }, {\n    key: \"handleUploadFile\",\n    value: function handleUploadFile(e) {\n      // console.log(this);\n      // console.log(e.target.files[0]);\n      var CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dqbat91l8/upload';\n      var CLOUDINARY_UPLOAD_PRESET = 'b3uy9rh5';\n      var file = e.target.files[0];\n      var formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n      axios({\n        url: CLOUDINARY_URL,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        data: formData\n      }).then(function (res) {\n        document.getElementById('sowImage').src = res.data.url;\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit() {\n      //e.preventDefault();\n      var _this = this;\n\n      var form = document.getElementById(\"formNews\");\n      var productData = {\n        \"title\": form['title'].value,\n        \"description\": form['description'].value,\n        \"content\": this.state.model,\n        \"source\": form['source'].value,\n        \"author\": form['author'].value,\n        \"category_id\": this.state.category,\n        \"user_id\": USER.id,\n        \"img\": form['sowImage'].src\n      };\n      var req = new XMLHttpRequest();\n      req.open(\"POST\", \"http://nalvnsmartnews.herokuapp.com/api/news\");\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      req.onload = function () {\n        var res = JSON.parse(this.responseText);\n\n        if (req.status === 200 || req.status === 201) {\n          openNotificationWithIcon('success', this.responseText);\n          setTimeout(function () {\n            return React.createElement(ListNewsUser, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            });\n          }, 3000);\n        } else {\n          console.log(res);\n          openNotificationWithIcon('error', this.responseText);\n\n          _this.setState({\n            loading: false\n          });\n        }\n      };\n\n      req.send(JSON.stringify(productData));\n    }\n  }, {\n    key: \"getCategory\",\n    value: function getCategory() {\n      var req = new XMLHttpRequest();\n      var dataCategory;\n\n      var _this = this;\n\n      req.open(\"GET\", \"http://nalvnsmartnews.herokuapp.com/api/category\");\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      req.onload = function () {\n        if (req.status === 200 || req.status === 201) {\n          dataCategory = JSON.parse(this.responseText).data;\n\n          _this.setState({\n            categoryOptions: dataCategory\n          });\n        } else {\n          console.log(JSON.parse(this.responseText));\n        }\n      };\n\n      req.send();\n    }\n  }, {\n    key: \"handleClearForm\",\n    value: function handleClearForm(e) {\n      e.preventDefault();\n      this.setState({});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"login-form\",\n        id: \"formNews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"The title should not be empty\"\n        }]\n      })(React.createElement(Input, {\n        name: \"title\",\n        placeholder: \"Please input your title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), getFieldDecorator(\"description\", {\n        rules: [{\n          required: true,\n          message: \"The description should not be empty \"\n        }]\n      })(React.createElement(Input, {\n        name: \"description\",\n        placeholder: \"Please input your description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), getFieldDecorator(\"category\", {\n        rules: [{\n          required: true,\n          message: \"Please select a category \"\n        }]\n      })(React.createElement(Select, {\n        id: \"category\",\n        style: {\n          width: 200\n        },\n        placeholder: \"Select a category\",\n        onChange: this.handleSelectChange,\n        onClick: this.getCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, this.state.categoryOptions.map(function (value, i) {\n        return React.createElement(Option, {\n          key: i,\n          value: value.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, value.name);\n      })))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), getFieldDecorator(\"image\", {\n        rules: [{\n          required: true,\n          message: \"The image should not be empty \"\n        }]\n      })(React.createElement(\"input\", {\n        type: \"file\",\n        id: \"uploadImg\",\n        onChange: function onChange(e) {\n          _this3.handleUploadFile(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        hidden: false,\n        id: \"sowImage\",\n        style: {\n          width: 180,\n          height: 180\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), getFieldDecorator(\"content\", {\n        rules: [{\n          required: false,\n          message: \"The content should not be empty \"\n        }]\n      })(React.createElement(FroalaEditor, {\n        tag: \"textarea\",\n        config: {\n          placeholderText: 'Enter Your Content Here!',\n          charCounterCount: false,\n          height: 200,\n          imageUploadURL: 'https://api.cloudinary.com/v1_1/dqbat91l8/upload',\n          imageUploadParams: {\n            'upload_preset': 'b3uy9rh5'\n          },\n          imageUploadMethod: 'POST',\n          events: {\n            'froalaEditor.image.uploaded': function froalaEditorImageUploaded(e, editor, response) {\n              response = JSON.parse(response);\n              editor.image.insert(response.secure_url, true, null, editor.image.get(), null);\n              return false;\n            }\n          }\n        },\n        model: this.state.model,\n        onModelChange: this.handleModelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), getFieldDecorator(\"source\", {\n        rules: [{\n          required: true,\n          message: \"The source should not be empty \"\n        }]\n      })(React.createElement(Input, {\n        name: \"source\",\n        placeholder: \"Please input source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), getFieldDecorator(\"author\", {\n        rules: [{\n          required: true,\n          message: \"The author should not be empty \"\n        }]\n      })(React.createElement(Input, {\n        name: \"author\",\n        placeholder: \"Please input author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formTailLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(Button, {\n        block: true,\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.check,\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return DynamicRule;\n}(React.Component);\n\nvar CreateForm = Form.create({\n  name: \"dynamic_rule\"\n})(DynamicRule);\nexport default CreateForm;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\my-app-reactjs\\src\\profile-user\\js\\Create-News.js"],"names":["React","axios","Form","Input","Select","Button","notification","FroalaEditor","ListNewsUser","USER","JSON","parse","sessionStorage","getItem","Option","openNotificationWithIcon","type","notifi","message","description","setTimeout","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","DynamicRule","props","enterLoading","setState","loading","enterIconLoading","iconLoading","check","form","validateFields","err","handleFormSubmit","handleModelChange","model","handleSelectChange","value","category","state","categoryOptions","title","source","author","img","user_id","checktitle","bind","handleClearForm","handleUploadFile","getCategory","e","CLOUDINARY_URL","CLOUDINARY_UPLOAD_PRESET","file","target","files","formData","FormData","append","url","method","headers","data","then","res","document","getElementById","src","catch","console","log","_this","productData","id","req","XMLHttpRequest","open","setRequestHeader","onload","responseText","status","send","stringify","dataCategory","preventDefault","getFieldDecorator","rules","required","width","map","i","name","height","placeholderText","charCounterCount","imageUploadURL","imageUploadParams","imageUploadMethod","events","editor","response","image","insert","secure_url","get","Component","CreateForm","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport {Form, Input, Select, Button, notification} from \"antd\";\r\n\r\n\r\nimport FroalaEditor from 'react-froala-wysiwyg';\r\nimport ListNewsUser from \"./ListNewsUser\";\r\nconst USER = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\nconst Option = Select.Option;\r\n\r\nconst openNotificationWithIcon = (type, notifi) => {\r\n    if (type === 'warning') {\r\n        notification[type]({\r\n            message: 'Warning',\r\n            description: 'Please wait for the news to be moderated.',\r\n        });\r\n    }\r\n    if (type === 'success') {\r\n\r\n        notification[type]({\r\n            message: 'Success',\r\n            description: 'Your news has been posted.',\r\n        });\r\n        setTimeout(() => {\r\n            openNotificationWithIcon(\"warning\");\r\n        }, 3000);\r\n\r\n    }\r\n    if (type === 'error') {\r\n        notification[type]({\r\n            message: 'Error',\r\n            description: [notifi],\r\n        });\r\n    }\r\n};\r\n\r\nconst formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 16}\r\n};\r\nconst formTailLayout = {\r\n    labelCol: {span: 16},\r\n    wrapperCol: {span: 4, offset: 12}\r\n};\r\n\r\nclass DynamicRule extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            categoryOptions: [],\r\n            model: '',\r\n            title: '',\r\n            category: '',\r\n            description: '',\r\n            source: '',\r\n            author: '',\r\n            img: '',\r\n            user_id: '',\r\n            loading: false,\r\n            iconLoading: false,\r\n            checktitle: false,\r\n\r\n\r\n        };\r\n\r\n        this.handleModelChange = this.handleModelChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n        this.handleUploadFile = this.handleUploadFile.bind(this);\r\n    }\r\n\r\n    enterLoading = () => {\r\n        this.setState({loading: true});\r\n    }\r\n\r\n    enterIconLoading = () => {\r\n        this.setState({iconLoading: true});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategory();\r\n\r\n\r\n    }\r\n\r\n    handleUploadFile(e) {\r\n\r\n        // console.log(this);\r\n        // console.log(e.target.files[0]);\r\n        var CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dqbat91l8/upload';\r\n        var CLOUDINARY_UPLOAD_PRESET = 'b3uy9rh5';\r\n        var file = e.target.files[0];\r\n        var formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\r\n        axios({\r\n            url: CLOUDINARY_URL,\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            data: formData\r\n        }).then(function (res) {\r\n            document.getElementById('sowImage').src = res.data.url;\r\n        }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n    handleFormSubmit() {\r\n        //e.preventDefault();\r\n        var _this = this;\r\n        let form = document.getElementById(\"formNews\");\r\n\r\n        var productData = {\r\n            \"title\": form['title'].value,\r\n            \"description\": form['description'].value,\r\n            \"content\": this.state.model,\r\n            \"source\": form['source'].value,\r\n            \"author\": form['author'].value,\r\n            \"category_id\": this.state.category,\r\n            \"user_id\": USER.id,\r\n            \"img\": form['sowImage'].src\r\n        };\r\n\r\n        var req = new XMLHttpRequest();\r\n        req.open(\"POST\", \"http://nalvnsmartnews.herokuapp.com/api/news\");\r\n        req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        req.onload = function () {\r\n            var res = JSON.parse(this.responseText);\r\n            if (req.status === 200 || req.status === 201) {\r\n                openNotificationWithIcon('success', this.responseText);\r\n                setTimeout(() => {\r\n                  return(\r\n                      <ListNewsUser/>\r\n                  );\r\n                }, 3000);\r\n            } else {\r\n                console.log(res);\r\n                openNotificationWithIcon('error', this.responseText);\r\n                _this.setState({loading: false})\r\n            }\r\n        };\r\n        req.send(JSON.stringify(productData));\r\n    }\r\n\r\n    getCategory() {\r\n        var req = new XMLHttpRequest();\r\n        var dataCategory;\r\n        var _this = this;\r\n\r\n        req.open(\"GET\", \"http://nalvnsmartnews.herokuapp.com/api/category\");\r\n        req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        req.onload = function () {\r\n            if (req.status === 200 || req.status === 201) {\r\n                dataCategory = (JSON.parse(this.responseText)).data\r\n                _this.setState({\r\n                    categoryOptions: dataCategory\r\n                });\r\n            } else {\r\n                console.log(JSON.parse(this.responseText));\r\n            }\r\n        };\r\n        req.send();\r\n    }\r\n\r\n    handleClearForm(e) {\r\n        e.preventDefault();\r\n        this.setState({});\r\n\r\n\r\n    }\r\n\r\n    check = () => {\r\n        this.props.form.validateFields(err => {\r\n            if (!err) {\r\n                this.handleFormSubmit()\r\n                this.enterLoading()\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    handleModelChange = model => {\r\n        this.setState({\r\n            model: model\r\n        });\r\n\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({\r\n            category: value\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (\r\n            <div>\r\n                <Form className=\"login-form\" id=\"formNews\">\r\n                    <Form.Item {...formItemLayout} label=\"Title\">\r\n                        {getFieldDecorator(\"title\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"The title should not be empty\"\r\n                                }\r\n                            ]\r\n                        })(<Input name=\"title\" placeholder=\"Please input your title\"/>)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...formItemLayout} label=\"Description\">\r\n                        {getFieldDecorator(\"description\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"The description should not be empty \"\r\n                                }\r\n                            ]\r\n                        })(<Input name={\"description\"} placeholder=\"Please input your description\"/>)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...formItemLayout} label=\"Category\">\r\n                        {getFieldDecorator(\"category\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please select a category \"\r\n                                }\r\n                            ]\r\n                        })(<Select\r\n                            id={\"category\"}\r\n                            style={{width: 200}}\r\n                            placeholder=\"Select a category\"\r\n                            onChange={this.handleSelectChange}\r\n                            onClick={this.getCategory}\r\n                        >\r\n                            {this.state.categoryOptions.map((value, i) => <Option key={i}\r\n                                                                                  value={value.id}>{value.name}</Option>)}\r\n\r\n                        </Select>)}\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item {...formItemLayout} label=\"Image\">\r\n                        {getFieldDecorator(\"image\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"The image should not be empty \"\r\n                                }\r\n                            ]\r\n                        })(<input\r\n                                type='file'\r\n                                id='uploadImg'\r\n                                onChange={e => {\r\n                                    this.handleUploadFile(e)\r\n                                }}\r\n                            />\r\n                        )}\r\n                        <img\r\n                            hidden={false}\r\n                            id='sowImage'\r\n                            style={{width: 180, height: 180}}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...formItemLayout} label=\"Content\">\r\n                        {getFieldDecorator(\"content\", {\r\n                            rules: [\r\n                                {\r\n                                    required: false,\r\n                                    message: \"The content should not be empty \"\r\n                                }\r\n                            ]\r\n                        })(<FroalaEditor\r\n                            tag='textarea'\r\n                            config={{\r\n                                placeholderText: 'Enter Your Content Here!',\r\n                                charCounterCount: false,\r\n                                height: 200,\r\n                                imageUploadURL: 'https://api.cloudinary.com/v1_1/dqbat91l8/upload',\r\n                                imageUploadParams: {\r\n                                    'upload_preset': 'b3uy9rh5'\r\n                                },\r\n                                imageUploadMethod: 'POST',\r\n                                events: {\r\n                                    'froalaEditor.image.uploaded': (e, editor, response) => {\r\n                                        response = JSON.parse(response);\r\n                                        editor.image.insert(response.secure_url, true, null, editor.image.get(), null)\r\n                                        return false\r\n                                    }\r\n                                }\r\n                            }}\r\n\r\n                            model={this.state.model}\r\n                            onModelChange={this.handleModelChange}\r\n                        />)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...formItemLayout} label=\"Source\">\r\n                        {getFieldDecorator(\"source\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"The source should not be empty \"\r\n                                }\r\n                            ]\r\n                        })(<Input name={\"source\"} placeholder=\"Please input source\"/>)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...formItemLayout} label=\"Author\">\r\n                        {getFieldDecorator(\"author\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"The author should not be empty \"\r\n                                }\r\n                            ]\r\n                        })(<Input name={\"author\"} placeholder=\"Please input author\"/>)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...formTailLayout}>\r\n                        <Button block type=\"primary\" htmlType=\"submit\" onClick={this.check}\r\n                                loading={this.state.loading}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst CreateForm = Form.create({name: \"dynamic_rule\"})(DynamicRule);\r\nexport default CreateForm;\r\n"]},"metadata":{},"sourceType":"module"}