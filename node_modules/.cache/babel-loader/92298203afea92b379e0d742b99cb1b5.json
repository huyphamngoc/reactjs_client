{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\my-app-reactjs\\\\src\\\\profile-user\\\\js\\\\ListNewsUser.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { List, Icon, notification, Button, Modal } from 'antd';\nimport Link from \"react-router-dom/es/Link\";\nvar confirm = Modal.confirm;\nvar API_URL = \"https://nalvnsmartnews.herokuapp.com\";\nvar USER = JSON.parse(sessionStorage.getItem('userData'));\n\nvar openNotificationWithIcon = function openNotificationWithIcon(type, notifi) {\n  notification[type]({\n    message: [type],\n    description: [notifi]\n  });\n};\n\nvar IconText = function IconText(_ref) {\n  var type = _ref.type,\n      text = _ref.text;\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: type,\n    style: {\n      marginRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), text);\n};\n\nvar ListNewsUser =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListNewsUser, _React$Component);\n\n  function ListNewsUser(props) {\n    var _this2;\n\n    _classCallCheck(this, ListNewsUser);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ListNewsUser).call(this, props));\n\n    _this2.howDeleteConfirm = function (item) {\n      var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n      confirm({\n        title: 'Are you sure delete this news ?',\n        content: [item.title],\n        okText: 'Yes',\n        okType: 'danger',\n        cancelText: 'No',\n        onOk: function onOk() {\n          _this.enterLoading();\n\n          var req = new XMLHttpRequest();\n          var dataListNews;\n          req.open(\"DELETE\", API_URL + \"/api/news/\" + [item.id]);\n          req.setRequestHeader(\"Content-Type\", \"application/json\");\n\n          req.onload = function () {\n            if (req.status === 200 || req.status === 201) {\n              dataListNews = JSON.parse(this.responseText);\n              openNotificationWithIcon('success', \"Deleted\" + [item.title]);\n              setTimeout(function () {\n                openNotificationWithIcon('warning', \"The page will automatically reload !!!\");\n              }, 1000);\n            } else {\n              console.log(JSON.parse(this.responseText));\n            }\n          };\n\n          req.send();\n\n          _this.getListNews();\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    };\n\n    _this2.enterLoading = function () {\n      _this2.setState({\n        loading: true\n      });\n    };\n\n    _this2.state = {\n      listData: [],\n      loading: false\n    };\n    return _this2;\n  }\n\n  _createClass(ListNewsUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getListNews();\n    }\n  }, {\n    key: \"getListNews\",\n    value: function getListNews() {\n      var req = new XMLHttpRequest();\n      var dataListNews;\n\n      var _this = this;\n\n      req.open(\"GET\", API_URL + \"/api/news/user/\" + USER.id);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      req.onload = function () {\n        console.log(this);\n\n        if (req.status === 200 || req.status === 201) {\n          dataListNews = JSON.parse(this.responseText).data;\n\n          _this.setState({\n            listData: dataListNews,\n            loading: false\n          });\n        } else {\n          console.log(JSON.parse(this.responseText));\n        }\n      };\n\n      req.send();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        pagination: {\n          onChange: function onChange(page) {\n            console.log(page);\n          },\n          pageSize: 5\n        },\n        dataSource: this.state.listData,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            key: item.title,\n            actions: [React.createElement(IconText, {\n              type: \"clock-circle\",\n              text: item.updated_at,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }), React.createElement(Button, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"form\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            })), React.createElement(Button, {\n              loading: _this3.state.loading,\n              onClick: function onClick() {\n                return _this3.howDeleteConfirm(item);\n              },\n              type: \"danger\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"delete\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }))],\n            extra: React.createElement(\"img\", {\n              width: 272,\n              height: 163,\n              alt: \"logo\",\n              src: item.img,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            title: React.createElement(\"a\", {\n              href: \"news-detail/\".concat(item.href),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, \" \", item.title, \" \"),\n            description: item.category_name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }), item.description);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), \"}\");\n    }\n  }]);\n\n  return ListNewsUser;\n}(React.Component);\n\nexport default ListNewsUser;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\my-app-reactjs\\src\\profile-user\\js\\ListNewsUser.js"],"names":["React","List","Icon","notification","Button","Modal","Link","confirm","API_URL","USER","JSON","parse","sessionStorage","getItem","openNotificationWithIcon","type","notifi","message","description","IconText","text","marginRight","ListNewsUser","props","howDeleteConfirm","item","_this","title","content","okText","okType","cancelText","onOk","enterLoading","req","XMLHttpRequest","dataListNews","open","id","setRequestHeader","onload","status","responseText","setTimeout","console","log","send","getListNews","onCancel","setState","loading","state","listData","data","onChange","page","pageSize","updated_at","img","href","category_name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {List, Icon, notification, Button, Modal} from 'antd';\r\nimport Link from \"react-router-dom/es/Link\";\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nconst API_URL = \"https://nalvnsmartnews.herokuapp.com\";\r\n\r\nconst USER = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\nconst openNotificationWithIcon = (type, notifi) => {\r\n    notification[type]({\r\n        message: [type],\r\n        description: [notifi],\r\n    });\r\n};\r\n\r\nconst IconText = ({type, text}) => (\r\n    <span>\r\n        <Icon type={type} style={{marginRight: 8}}/>\r\n        {text}\r\n    </span>\r\n);\r\n\r\nclass ListNewsUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listData: [],\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    howDeleteConfirm = (item) => {\r\n        var _this = this;\r\n        confirm({\r\n            title: 'Are you sure delete this news ?',\r\n            content: [item.title],\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk() {\r\n                _this.enterLoading();\r\n                var req = new XMLHttpRequest();\r\n                var dataListNews;\r\n                req.open(\"DELETE\", API_URL + \"/api/news/\" + [item.id]);\r\n                req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                req.onload = function () {\r\n                    if (req.status === 200 || req.status === 201) {\r\n                        dataListNews = (JSON.parse(this.responseText));\r\n                        openNotificationWithIcon('success', \"Deleted\" + [item.title]);\r\n                        setTimeout(() => {\r\n                            openNotificationWithIcon('warning', \"The page will automatically reload !!!\");\r\n                        }, 1000);\r\n                    } else {\r\n                        console.log(JSON.parse(this.responseText));\r\n                    }\r\n                };\r\n                req.send();\r\n                _this.getListNews();\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getListNews();\r\n\r\n    }\r\n\r\n    enterLoading = () => {\r\n        this.setState({loading: true});\r\n    }\r\n\r\n    getListNews() {\r\n        var req = new XMLHttpRequest();\r\n        var dataListNews;\r\n        var _this = this;\r\n\r\n        req.open(\"GET\", API_URL + \"/api/news/user/\"+ USER.id);\r\n        req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        req.onload = function () {\r\n            console.log(this);\r\n            if (req.status === 200 || req.status === 201) {\r\n                dataListNews = (JSON.parse(this.responseText)).data;\r\n\r\n                _this.setState({\r\n                    listData: dataListNews,\r\n                    loading: false,\r\n                })\r\n            } else {\r\n                console.log(JSON.parse(this.responseText));\r\n            }\r\n        };\r\n        req.send();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    pagination={{\r\n                        onChange: (page) => {\r\n                            console.log(page);\r\n                        },\r\n                        pageSize: 5,\r\n                    }}\r\n                    dataSource={this.state.listData}\r\n\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                            key={item.title}\r\n                            actions={[<IconText type=\"clock-circle\" text={item.updated_at}/>,\r\n                                <Button><Icon type=\"form\"/>\r\n                                </Button>,\r\n                                <Button loading={this.state.loading} onClick={() => this.howDeleteConfirm(item)}\r\n                                        type=\"danger\"><Icon type=\"delete\"/></Button>]}\r\n                            extra={<img width={272} height={163} alt=\"logo\" src={item.img}/>}>\r\n\r\n                            <List.Item.Meta\r\n                                title={ <a href={`news-detail/${item.href}`}> {item.title} </a> }\r\n\r\n                                description={item.category_name}\r\n                            />\r\n\r\n                            {item.description}\r\n                        </List.Item>\r\n                    )}\r\n                />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListNewsUser;\r\n"]},"metadata":{},"sourceType":"module"}