{"ast":null,"code":"import _toConsumableArray from \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/src/layout/js/Login-Register.js\";\nimport React, { Component } from 'react';\nimport '../css/Login-Register.css';\nimport axios from \"axios\";\n\nvar Login_Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login_Register, _Component);\n\n  function Login_Register(props) {\n    var _this;\n\n    _classCallCheck(this, Login_Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login_Register).call(this, props));\n    _this.state = {\n      isLoginOpen: true,\n      isRegisterOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Login_Register, [{\n    key: \"showLoginBox\",\n    value: function showLoginBox() {\n      this.setState({\n        isLoginOpen: true,\n        isRegisterOpen: false\n      });\n    }\n  }, {\n    key: \"showRegisterBox\",\n    value: function showRegisterBox() {\n      this.setState({\n        isRegisterOpen: true,\n        isLoginOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"test\",\n        className: \"re-root-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-controller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\"),\n        onClick: this.showLoginBox.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"controller \" + (this.state.isRegisterOpen ? \"selected-controller\" : \"\"),\n        onClick: this.showRegisterBox.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Register\")), React.createElement(\"div\", {\n        className: \"box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.isLoginOpen && React.createElement(LoginBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), this.state.isRegisterOpen && React.createElement(RegisterBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login_Register;\n}(Component); //Login Box\n\n\nvar LoginBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginBox, _React$Component);\n\n  function LoginBox(props) {\n    var _this2;\n\n    _classCallCheck(this, LoginBox);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LoginBox).call(this, props));\n    _this2.state = {\n      errors: [],\n      email: '',\n      password: ''\n    };\n    return _this2;\n  } //Add New Error Object to the array {elm: msg}\n\n\n  _createClass(LoginBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    } //Remove a specific element from the array \n\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = []; //Add all elements from the prev array to the new one that has a different element\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elm != err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    } //Update Email, password on change event \n\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      this.setState({\n        email: e.target.value\n      });\n      this.clearValidationErr(\"email\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(e) {\n      this.setState({\n        password: e.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(e) {\n      var err = false;\n\n      if (this.state.email == \"\") {\n        this.showValidationErr(\"email\", \"Email Cannot be empty!\");\n        err = true;\n      }\n\n      var emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n      if (!emailRegex.test(this.state.email)) {\n        this.showValidationErr(\"email\", \"invalid email address!\");\n        err = true;\n      }\n\n      if (this.state.password.length < 6) {\n        this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\n        err = true;\n      }\n\n      if (err == false) {\n        var user = {\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        };\n        console.log(user);\n        axios.post(\"https://smartnews.nal.vn/api/login\", user).then(function (res) {\n          console.log(res);\n          console.log(res.data);\n        }).catch(function (error) {\n          var err = error.response.data.errors;\n          console.log(error.response.data.er); // if(err.email){\n          //     this.showValidationErr(\"email\", err.email[0]);\n          // }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //NULL by default (help us check when rendering)\n      var passwordErr = null,\n          emailErr = null,\n          loginErr = null; //Loop and find which ones has the error\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          //Assign the validation error message \n          if (err.elm == \"password\") {\n            passwordErr = err.msg;\n          }\n\n          if (err.elm == \"email\") {\n            emailErr = err.msg;\n          }\n\n          if (err.elm == \"login\") {\n            loginErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, loginErr ? loginErr : \"\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"login-input\",\n        placeholder: \"Email\",\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitLogin.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginBox;\n}(React.Component); //Register Box \n\n\nvar RegisterBox =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(RegisterBox, _React$Component2);\n\n  function RegisterBox(props) {\n    var _this3;\n\n    _classCallCheck(this, RegisterBox);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(RegisterBox).call(this, props));\n    _this3.state = {\n      errors: [],\n      username: '',\n      email: '',\n      password: '',\n      confirmed_password: ''\n    };\n    return _this3;\n  } //Add New Error Object to the array {elm: msg}\n\n\n  _createClass(RegisterBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    } //Remove a specific element from the array \n\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = []; //Add all elements from the prev array to the new one that has a different element\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = prevState.errors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var err = _step3.value;\n\n            if (elm != err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    } //Update Username, password, and email on change event \n\n  }, {\n    key: \"onUsernameChange\",\n    value: function onUsernameChange(e) {\n      this.setState({\n        username: e.target.value\n      }); //We want to clear the error when ever the user type something new \n\n      this.clearValidationErr(\"username\");\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      this.setState({\n        email: e.target.value\n      });\n      this.clearValidationErr(\"email\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(e) {\n      this.setState({\n        password: e.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"onConfirmedPasswordChange\",\n    value: function onConfirmedPasswordChange(e) {\n      this.setState({\n        confirmed_password: e.target.value\n      });\n      this.clearValidationErr(\"confirmed_password\");\n    }\n  }, {\n    key: \"submitRegister\",\n    value: function submitRegister(e) {\n      var _this4 = this;\n\n      var err = false; //Check for all input fields and show errors if empty (you can implement other cases!)\n\n      if (this.state.username == \"\") {\n        this.showValidationErr(\"username\", \"Username Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.email == \"\") {\n        this.showValidationErr(\"email\", \"Email Cannot be empty!\");\n        err = true;\n      }\n\n      var emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n      if (!emailRegex.test(this.state.email)) {\n        this.showValidationErr(\"email\", \"invalid email address!\");\n        err = true;\n      }\n\n      if (this.state.password == \"\") {\n        this.showValidationErr(\"password\", \"Password Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.password.length < 6) {\n        this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\n        err = true;\n      }\n\n      if (this.state.confirmed_password == \"\") {\n        this.showValidationErr(\"confirmed_password\", \"Confirmed Password Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.password != this.state.confirmed_password) {\n        console.log(this.state.password, this.state.confirmed_password);\n        console.log('ddd', this.state.confirmed_password);\n        this.showValidationErr(\"confirmed_password\", \"Confirmed Password must be same as password\");\n        err = true;\n      }\n\n      if (err == false) {\n        var user = {\n          \"name\": this.state.username,\n          \"email\": this.state.email,\n          \"password\": this.state.password,\n          \"passwordConfirm\": this.state.confirmed_password\n        };\n        console.log(user);\n        axios.post(\"https://smartnews.nal.vn/api/register\", user).then(function (res) {\n          console.log(res);\n          console.log(res.data);\n          alert('You have registered successfully');\n        }).catch(function (error) {\n          var err = error.response.data.errors;\n          console.log(error.response.data.errors);\n\n          if (err.email) {\n            _this4.showValidationErr(\"email\", err.email[0]);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //NULL by default (help us check when rendering)\n      var usernameErr = null,\n          passwordErr = null,\n          emailErr = null,\n          ConfirmedPassword = null; //Loop and find which ones has the error\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.state.errors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var err = _step4.value;\n\n          //Assign the validation error message \n          if (err.elm == \"username\") {\n            usernameErr = err.msg;\n          }\n\n          if (err.elm == \"password\") {\n            passwordErr = err.msg;\n          }\n\n          if (err.elm == \"email\") {\n            emailErr = err.msg;\n          }\n\n          if (err.elm == \"confirmed_password\") {\n            ConfirmedPassword = err.msg;\n          } //No (else if or else) statements cause we need to check for all possible elements\n\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"login-input\",\n        placeholder: \"Username\",\n        onChange: this.onUsernameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"login-input\",\n        placeholder: \"Email\",\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Confirm Password\",\n        onChange: this.onConfirmedPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, ConfirmedPassword ? ConfirmedPassword : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return RegisterBox;\n}(React.Component);\n\nexport default Login_Register;","map":{"version":3,"sources":["/home/duongninh/Documents/Nal/smartnews/test/reactjs_client/src/layout/js/Login-Register.js"],"names":["React","Component","axios","Login_Register","props","state","isLoginOpen","isRegisterOpen","setState","showLoginBox","bind","showRegisterBox","LoginBox","errors","email","password","elm","msg","prevState","newArr","err","push","e","target","value","clearValidationErr","showValidationErr","emailRegex","RegExp","test","length","user","console","log","post","then","res","data","catch","error","response","er","passwordErr","emailErr","loginErr","onEmailChange","onPasswordChange","submitLogin","RegisterBox","username","confirmed_password","alert","usernameErr","ConfirmedPassword","onUsernameChange","onConfirmedPasswordChange","submitRegister"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../css/Login-Register.css';\nimport axios from \"axios\";\n\nclass Login_Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isLoginOpen: true,\n          isRegisterOpen: false\n        };\n    }\n\n    showLoginBox() {\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\n    }\n\n    showRegisterBox() {\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\n    }\n\n    render(){\n        return(\n            <div id=\"test\" className=\"re-root-container\">\n                <div className=\"box-controller\">\n                    <div\n                        className={\"controller \" + (this.state.isLoginOpen\n                        ? \"selected-controller\"\n                        : \"\")}\n                        onClick={this\n                        .showLoginBox\n                        .bind(this)}>\n                        Login\n                    </div>\n\n                    <div\n                        className={\"controller \" + (this.state.isRegisterOpen\n                        ? \"selected-controller\"\n                        : \"\")}\n                        onClick={this\n                        .showRegisterBox\n                        .bind(this)}>\n                        Register\n                    </div>\n                </div>\n\n                <div className=\"box-container\">\n                  {this.state.isLoginOpen && <LoginBox/>}\n                  {this.state.isRegisterOpen && <RegisterBox/>}\n                </div>\n            </div>\n            );\n    }\n}\n\n//Login Box\nclass LoginBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        errors: [],\n        email: '',\n        password: '',\n    };\n  }\n\n  //Add New Error Object to the array {elm: msg}\n  showValidationErr(elm, msg) {\n    this.setState((prevState) => ({\n      errors: [\n        ...prevState.errors, {\n          elm,\n          msg\n        }\n      ]\n    }));\n  }\n\n  //Remove a specific element from the array \n  clearValidationErr(elm) {\n    this.setState((prevState) => {\n      let newArr = [];\n      //Add all elements from the prev array to the new one that has a different element\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return {errors: newArr};\n    });\n  }\n\n  //Update Email, password on change event \n  onEmailChange(e) {\n    this.setState({email: e.target.value});\n    this.clearValidationErr(\"email\");\n  }\n\n  onPasswordChange(e) {\n    this.setState({password: e.target.value});\n    this.clearValidationErr(\"password\");\n  }\n\n  submitLogin(e) {\n    let err = false;\n    if (this.state.email == \"\") {\n      this.showValidationErr(\"email\", \"Email Cannot be empty!\");\n      err = true;\n    }\n    const emailRegex = RegExp(\n      /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n    );\n    if (!emailRegex.test(this.state.email)) {\n      this.showValidationErr(\"email\", \"invalid email address!\");\n      err = true;\n    }\n\n    if (this.state.password.length < 6) {\n      this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\n      err = true;\n    }\n\n    if(err == false){\n      const user = {\n          \"email\": this.state.email,\n          \"password\": this.state.password,\n      }\n      console.log(user);\n      axios.post(`https://smartnews.nal.vn/api/login`, user )\n            .then(res => {\n              console.log(res);\n              console.log(res.data);\n            }).catch(error => {\n              let err = error.response.data.errors\n              console.log(error.response.data.er)\n              // if(err.email){\n              //     this.showValidationErr(\"email\", err.email[0]);\n              // }\n\n          })\n    }\n\n  }\n\n  render() {\n    //NULL by default (help us check when rendering)\n       let \n         passwordErr = null,\n         emailErr = null,\n         loginErr = null;\n       //Loop and find which ones has the error\n       for (let err of this.state.errors) {\n         //Assign the validation error message \n         \n         if (err.elm == \"password\") {\n           passwordErr = err.msg;\n         }\n         if (err.elm == \"email\") {\n           emailErr = err.msg;\n         }\n         if (err.elm == \"login\") {\n           loginErr = err.msg;\n         }\n\n       }\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">\n          Login\n        </div>\n\n        <small className=\"danger-error\">{loginErr\n            ? loginErr\n            : \"\"}\n        </small>\n\n        <div className=\"box\">\n\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              className=\"login-input\"\n              placeholder=\"Email\"\n              onChange={this\n                .onEmailChange\n                .bind(this)}/>\n            <small className=\"danger-error\">{emailErr\n                ? emailErr\n                : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Password\"\n              onChange={this\n                .onPasswordChange\n                .bind(this)}/>\n            <small className=\"danger-error\">{passwordErr\n                ? passwordErr\n                : \"\"}\n            </small>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this\n            .submitLogin\n            .bind(this)}>Login</button>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\n//Register Box \nclass RegisterBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        errors: [],\n        username: '',\n        email: '',\n        password: '',\n        confirmed_password: ''\n    };\n  }\n\n  //Add New Error Object to the array {elm: msg}\n  showValidationErr(elm, msg) {\n    this.setState((prevState) => ({\n      errors: [\n        ...prevState.errors, {\n          elm,\n          msg\n        }\n      ]\n    }));\n  }\n  //Remove a specific element from the array \n  clearValidationErr(elm) {\n    this.setState((prevState) => {\n      let newArr = [];\n      //Add all elements from the prev array to the new one that has a different element\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return {errors: newArr};\n    });\n  }\n\n  //Update Username, password, and email on change event \n  onUsernameChange(e) {\n    this.setState({username: e.target.value});\n    //We want to clear the error when ever the user type something new \n    this.clearValidationErr(\"username\");\n  }\n\n  onEmailChange(e) {\n    this.setState({email: e.target.value});\n    this.clearValidationErr(\"email\");\n  }\n\n  onPasswordChange(e) {\n    this.setState({password: e.target.value});\n    this.clearValidationErr(\"password\");\n  }\n\n  onConfirmedPasswordChange(e) {\n    this.setState({confirmed_password: e.target.value});\n    this.clearValidationErr(\"confirmed_password\");\n  }\n\n  submitRegister(e) {\n    let err = false;\n    //Check for all input fields and show errors if empty (you can implement other cases!)\n      if (this.state.username == \"\") {\n        this.showValidationErr(\"username\", \"Username Cannot be empty!\");\n        err = true;\n      }\n      if (this.state.email == \"\") {\n        this.showValidationErr(\"email\", \"Email Cannot be empty!\");\n        err = true;\n      }\n\n      const emailRegex = RegExp(\n        /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n      );\n      if (!emailRegex.test(this.state.email)) {\n        this.showValidationErr(\"email\", \"invalid email address!\");\n        err = true;\n      }\n\n      if (this.state.password == \"\") {\n        this.showValidationErr(\"password\", \"Password Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.password.length < 6) {\n        this.showValidationErr(\"password\", \"Password must be longer than 5 chars!\");\n        err = true;\n      }\n\n      if (this.state.confirmed_password == \"\") {\n        this.showValidationErr(\"confirmed_password\", \"Confirmed Password Cannot be empty!\");\n        err = true;\n      }\n\n      if (this.state.password != this.state.confirmed_password) {\n        console.log(this.state.password, this.state.confirmed_password)\n        console.log('ddd', this.state.confirmed_password)\n        this.showValidationErr(\"confirmed_password\", \"Confirmed Password must be same as password\");\n        err = true;\n      }\n\n      if(err == false){\n        const user = {\n            \"name\": this.state.username,\n            \"email\": this.state.email,\n            \"password\": this.state.password,\n            \"passwordConfirm\": this.state.confirmed_password,\n        }\n        console.log(user);\n        axios.post(`https://smartnews.nal.vn/api/register`, user )\n              .then(res => {\n                console.log(res);\n                console.log(res.data);\n                alert('You have registered successfully')\n              }).catch(error => {\n                let err = error.response.data.errors\n                console.log(error.response.data.errors)\n                if(err.email){\n                    this.showValidationErr(\"email\", err.email[0]);\n                }\n\n            })\n      }\n  }\n\n  render() {\n\n    //NULL by default (help us check when rendering)\n       let usernameErr = null,\n         passwordErr = null,\n         emailErr = null,\n         ConfirmedPassword = null;\n       //Loop and find which ones has the error\n       for (let err of this.state.errors) {\n         //Assign the validation error message \n         if (err.elm == \"username\") {\n           usernameErr = err.msg;\n         }\n         if (err.elm == \"password\") {\n           passwordErr = err.msg;\n         }\n         if (err.elm == \"email\") {\n           emailErr = err.msg;\n         }\n         if (err.elm == \"confirmed_password\") {\n           ConfirmedPassword = err.msg;\n         }\n\n         //No (else if or else) statements cause we need to check for all possible elements\n       }\n\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">\n          Register\n        </div>\n        <div className=\"box\">\n\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"login-input\"\n              placeholder=\"Username\"\n              onChange={this\n                .onUsernameChange\n                .bind(this)}/>\n            <small className=\"danger-error\">{usernameErr\n                ? usernameErr\n                : \"\"}\n            </small>\n\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"text\" name=\"email\" className=\"login-input\" placeholder=\"Email\"\n            onChange={this\n              .onEmailChange\n              .bind(this)}/>\n\n            <small className=\"danger-error\">{emailErr\n                ? emailErr\n                : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Password\"\n              onChange={this\n                .onPasswordChange\n                .bind(this)}/>\n            <small className=\"danger-error\">{passwordErr\n                ? passwordErr\n                : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Confirm Password\"\n              onChange={this\n                .onConfirmedPasswordChange\n                .bind(this)}/>\n            <small className=\"danger-error\">{ConfirmedPassword\n                ? ConfirmedPassword\n                : \"\"}\n            </small>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this\n            .submitRegister\n            .bind(this)}>Register</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Login_Register;"]},"metadata":{},"sourceType":"module"}